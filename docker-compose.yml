version: "2"

services:
  bot_alpha_checker:
    image: ferdinandthe2/bot_alpha_checker:latest
#    build:
#      dockerfile: Dockerfile
      # Launch container only after 'postgres_alpha_checker'
      # returns positive healthcheck result
    depends_on:
      postgres_alpha_checker:
        condition: service_healthy
    environment:
      HOST: "postgres_alpha_checker"
      PORT: "5432"
      DB_NAME: "alpha_checker"
      APP_USER: "postgres"
      PASSWORD: "postgres"

      HOST_LINK: "209.250.251.40"
      PORT_LINK: "5434"
      DB_NAME_LINK: "link-factory"
      APP_USER_LINK: "postgres"
      PASSWORD_LINK: "hellohello"

      HOST_POSTBACK: "209.250.251.40"
      PORT_POSTBACK: "6000"
      DB_NAME_POSTBACK: "postback_factory"
      APP_USER_POSTBACK: "postgres"
      PASSWORD_POSTBACK: "hellohello"

    volumes:
      - checker_logs:/alpha_checker/logs

  postgres_alpha_checker:
    # Check if db ready to connection
    image: ferdinandthe2/postgres_alpha_checker:latest
    healthcheck:
      test: ["CMD", "pg_isready", "--username=postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    command: [ "postgres", "-c", "log_statement=all" ]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: alpha_checker
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - checker_db:/var/lib/postgresql/data

  django_alpha_checker:
    image: ferdinandthe2/django_alpha_checker:latest
    # Launch container only after 'postgres_alpha_checker'
    # returns positive healthcheck result
    depends_on:
      postgres_alpha_checker:
        condition: service_healthy
    entrypoint: /django_alpha_checker/entrypoint.sh
    environment:
      HOST: postgres_alpha_checker
      PORT: 5432
      DB_NAME: alpha_checker
      APP_USER: postgres
      PASSWORD: postgres
      DJANGO_SUPERUSER_PASSWORD: password
    ports:
      - "8080:8000"

volumes:
  checker_db:
    driver: local
  checker_logs: